;
; Author: Guillem Alminyana
;
; JMP-CALL-POP for execve executing /bin/ls -la
;

global _start

section .text

_start:

	jmp find_address

shellcode:

	; Get address for /bin/ls
	pop rdi

	; Null after /bin//sh. First A on shell_path_string
	mov [rdi + 7], byte ah

	; Null after -la. Second A on shell_path_string
	mov [rdi + 11], byte ah

	; RDI <- @shell_path_string
	mov [rdi + 16], rdi

	; @parameters in the B's
	xor rbx, rbx
	add rbx, 8
	add rbx, rdi
	mov [rdi + 24], rbx

	; NULL to C's
	mov [rdi + 32], rax

	; Place right values on registers fro syscall
	lea rsi, [rdi + 16]
	lea rdx, [rdi + 32]

	; Llamamos a la syscall	
	push 59
	pop rax

	syscall

find_address:
	
	call shellcode
	shell_path_string: db "/bin/lsA-laAAAAABBBBBBBBDDDDDDDDCCCCCCCC"
